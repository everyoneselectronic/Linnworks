<!-- 

TODO

make loop for low stock items
get all vars for item (supplier etc)

 -->

<?php 

require_once('./src/php/Factory.php');
require_once('./src/php/Auth.php');
require_once('./src/php/Dashboards.php');
require_once('./src/php/Inventory.php');
require_once('./src/php/Stock.php');
require_once('./src/php/PurchaseOrder.php');

// auth keys dev
$applicationId = 'b933a143-a9dc-4051-a7be-81af2690e199';
$applicationSecret = '80cc5f08-3060-45bc-8899-8fe0c72abdbc';
$token = '88878dfdc49bbd8dbb8305192a4f8558';

// get auth token
$auth = new AuthMethods();
$authorization = $auth->AuthorizeByApplication($applicationId,$applicationSecret,$token);
$apiToken = $authorization->Token;
$apiServer = "https://api.linnworks.net/";

// setup classes
$PurchaseOrder = new PurchaseOrderMethods();
$Dashboards = new DashboardsMethods();
$Inventory = new InventoryMethods();
$Stock = new StockMethods();

// get low stock list
$lowStock = $Dashboards->GetLowStockLevel('',10,$apiToken, $apiServer);

//  dev temp ids. Would be generated by $lowstock
$sid = array('key' => '100001' );
$item = $Stock->GetStockItemsByKey($sid,$apiToken, $apiServer);
$itemID = $item[0]->StockItemId;

// $sup = $Inventory->GetSuppliers($apiToken, $apiServer);
// $loc = $Inventory->GetStockLocations($apiToken, $apiServer);

// print some info to see what's going on
echo "<h1>Test</h1>";
echo "applicationId: "; echo $applicationId; echo "<br/>";
echo "applicationSecret: "; echo $applicationSecret; echo "<br/>";
echo "token: "; echo $token; echo "<br/><br/>";

echo "authorization: "; echo print_r($authorization); echo "<br/><br/>";

echo "lowStock: "; echo "<pre>"; print_r($lowStock); echo "</pre>";

echo "item: "; echo "<pre>"; print_r($item); echo "</pre>";

// makePO();

// test function to make PO, add item and update PO to OPEN
function makePO()
{
    global $auth, $PurchaseOrder, $itemID, $apiToken, $apiServer;

    echo "<h1>MAKEPO</h1>";

    // get current time for PO DateOfPurchase
    $currentTime = $auth->GetServerUTCTime();

    // prams for PO
    // need to get all item parameters make functions
    $createParameters = array(
      'fkSupplierId' => '5d1f3893-dad8-4653-befc-a982d21c07b4', // test supplier
      'fkLocationId' => '00000000-0000-0000-0000-000000000000', //default location
      'ExternalInvoiceNumber' => 'sample string 3',
      'Currency' => 'GBP',
      'SupplierReferenceNumber' => 'sample string 9',
      'DateOfPurchase' => $currentTime,
      'QuotedDeliveryDate' => '2018-01-24T15:47:17.0730815Z',
      'PostagePaid' => 3.0,
      'ShippingTaxRate' => 4.0,
      'ConversionRate' => 5.0
    );

    // create PO, returns PO id
    $po = $PurchaseOrder->Create_PurchaseOrder_Initial($createParameters,$apiToken, $apiServer);
    echo "po: "; echo "<pre>"; print_r($po); echo "</pre>";

    // Prams for item
    // need to get all item parameters make functions??
    // min qty, pack size to make valid order??
    $addItemParameter = array(
      "pkPurchaseId" => $po,
      "fkStockItemId" => $itemID,
      "Qty" => 10,
      "PackQuantity" => 1,
      "PackSize" => 1,
      "Cost" => 1.0,
      "TaxRate" => 0.0
    );

    // add item to PO
    $addItem = $PurchaseOrder->Add_PurchaseOrderItem($addItemParameter,$apiToken, $apiServer);
    echo "additem: "; echo "<pre>"; print_r($addItem); echo "</pre>";

    // prams for PO status change
    $changeStatusParameter = array(
      "pkPurchaseId" => $po,
      "status" => OPEN
    );

    // set PO to open once all items have been added
    // this will update item count and remove it from low stock
    $poOpen = $PurchaseOrder->Change_PurchaseOrderStatus($changeStatusParameter,$apiToken, $apiServer);
    echo "statusPO: "; echo "<pre>"; print_r($poOpen); echo "</pre>";

}

?>

<!-- 

get low stock items
sort items into suppliers
generate supplier po's
add items
generate pdfs
email suppliers
close any po stuff

NEEDED
gui
error report emails sent

 -->